#!/bin/sh -e
iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -j SNAT --to 182.255.0.148
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# Shouldn't need this but this makes it work anyway
echo 1 > /proc/sys/net/ipv4/ip_forward

#### Firewall Rules ####
iptables -X
iptables -F
iptables -t nat -F
iptables -t nat -X

iptables -A INPUT -m state --state ESTABLISH,RELATED -j ACCEPT
iptables -A FORWARD -m state --state ESTABLISH,RELATED -j ACCEPT
iptables -A OUTPUT -m state --state ESTABLISH,RELATED -j ACCEPT
iptables -t nat -I POSTROUTING -s 10.8.0.0/24 -o eth0 -j MASQUERADE
iptables -t nat -I POSTROUTING -s 10.9.0.0/24 -o eth0 -j MASQUERADE
iptables -t nat -I POSTROUTING -s 10.8.0.0/24 -o eth1 -j MASQUERADE
iptables -t nat -I POSTROUTING -s 10.9.0.0/24 -o eth1 -j MASQUERADE

iptables -A FORWARD -i tun0 -o eth0 -p tcp --dport 80 -j ACCEPT
iptables -A FORWARD -i tun0 -o eth0 -p tcp --dport 443 -j ACCEPT
iptables -A FORWARD -i tun0 -o eth0 -j ACCEPT
#iptables -t nat -A PREROUTING -p tcp -i tun0 --dport 80 -j DNAT --to-destination 182.255.1.9:80
#iptables -t nat -A PREROUTING -p tcp -i tun0 --dport 443 -j DNAT --to-destination 182.255.1.9:443


if ! [ -c /dev/net/tun ]; then
 mkdir -p /dev/net
 mknod -m 666 /dev/net/tun c 10 200
fi


# VM Hack: Restart openvpn server so that it works (tun interface didn't exist at usual systemctl startup but it does now!)
systemctl restart openvpn@server.service

exit 0
